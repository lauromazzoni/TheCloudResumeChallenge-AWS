  name: CI/CD Backend

  on:
    push:
      branches: [main]
    pull_request:
    workflow_dispatch:

  jobs:
    test-and-deploy:
      runs-on: ubuntu-latest
      steps:
        - name: Checkout repo
          uses: actions/checkout@v3

        - name: Set up Python
          uses: actions/setup-python@v4
          with:
            python-version: '3.12'

        - name: Install test dependencies
          run: |
            python -m pip install --upgrade pip
            pip install pytest requests

        - name: Configure AWS credentials
          uses: aws-actions/configure-aws-credentials@v2
          with:
            aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
            aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
            aws-region: ${{ secrets.AWS_REGION }}

        - name: Setup Terraform
          uses: hashicorp/setup-terraform@v2
          with:
            terraform_version: 1.9.8

        - name: Terraform Init
          run: terraform -chdir=terraform init -input=false

        - name: Terraform Validate
          run: terraform -chdir=terraform validate

        - name: Terraform Plan
          run: terraform -chdir=terraform plan -out=tfplan


        # 6. Executa o Destroy completo
        - name: Terraform Destroy
          run: terraform -chdir=terraform destroy -auto-approve          

        # - name: Terraform Apply
        #   run: terraform -chdir=terraform apply -auto-approve tfplan

        - name: Wait for API to be ready
          run: sleep 30

        - name: Run tests
          run: pytest -v tests/

        - name: Upload static files to S3
          if: success()
          run: |
            aws s3 sync . s3://${{ secrets.S3_BUCKET_NAME }} \
              --exclude "*" \
              --include "*.html" \
              --include "*.css" \
              --include "*.js" \
              --include "*.png" \
              --delete

        - name: Invalidate CloudFront cache
          if: success()
          run: |
            DISTRIBUTION_ID=$(terraform -chdir=terraform output -raw cloudfront_distribution_id)
            aws cloudfront create-invalidation --distribution-id $DISTRIBUTION_ID --paths "/*"
