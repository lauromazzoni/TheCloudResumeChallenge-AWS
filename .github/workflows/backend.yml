name: CI/CD Backend

on:
  push:
    branches:
      - main
  pull_request:

jobs:
  test-and-deploy:
    runs-on: ubuntu-latest

    steps:
      # Checkout do código
      - name: Checkout repo
        uses: actions/checkout@v3

      # Configura Python
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.12'

      # Instala dependências de testes
      - name: Install test dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pytest requests

      # Roda testes (chamando a API Gateway que o Terraform já criou)
      - name: Run tests
        run: pytest -v tests/

      # Configura credenciais da AWS
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      # Zipando o pacote
      - name: Package Lambda
        run: zip -j terraform/lambda.zip lambda_function.py
         
      # Configura Terraform
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.9.8

      # Inicializa Terraform
      - name: Terraform Init
        run: terraform -chdir=terraform init

      # Terraform Plan
      - name: Terraform Plan
        run: terraform -chdir=terraform plan -out=tfplan

      # Terraform Apply (só se os testes passarem)
      - name: Terraform Apply
        if: success()
        run: terraform -chdir=terraform apply -auto-approve tfplan
